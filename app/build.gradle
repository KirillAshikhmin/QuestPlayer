apply plugin: 'com.android.application'

import org.apache.tools.ant.taskdefs.condition.Os

android {
    compileSdkVersion 22
    buildToolsVersion '25.0.0'

   // useLibrary  'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.qsp.player"
        minSdkVersion 19
        targetSdkVersion 22
    }


    sourceSets.main {
        jniLibs.srcDir "src/main/libs"
        jni.srcDirs = []
    }

    task ndkBuild(type: Exec) {
        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        def ndkDir = properties.getProperty("ndk.dir")
        def ndkBuild = "$ndkDir/ndk-build" + (Os.isFamily(Os.FAMILY_WINDOWS) ? ".cmd" : "")

        commandLine ndkBuild, "-C", file("src/main/").absolutePath
    }

    task ndkClean(type: Exec) {
        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        def ndkDir = properties.getProperty("ndk.dir")
        def ndkBuild = "$ndkDir/ndk-build" + (Os.isFamily(Os.FAMILY_WINDOWS) ? ".cmd" : "")

        commandLine ndkBuild, "-C", file("src/main/").absolutePath, "clean"
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }

    clean.dependsOn "ndkClean"

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}
dependencies {
    compile 'pl.droidsonroids.gif:android-gif-drawable:1.2.1'
    compile 'com.github.chrisbanes:PhotoView:1.3.0'
    compile 'net.margaritov.preference.colorpicker.ColorPickerPreference:ColorPickerPreference:1.0.0'

  //  compile 'com.android.support:appcompat-v7:24.2.0'
  //  compile 'com.android.support:design:24.2.0'
}
